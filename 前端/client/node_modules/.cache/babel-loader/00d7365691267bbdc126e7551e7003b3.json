{"ast":null,"code":"import axios from 'axios';\nimport { Message, Loading } from 'element-ui';\nimport router from './router';\nlet loading; //定义loading变量\n\nfunction startLoading() {\n  //使用Element loading-start 方法\n  loading = Loading.service({\n    lock: true,\n    text: '加载中...',\n    background: 'rgba(0, 0, 0, 0.7)'\n  });\n}\n\nfunction endLoading() {\n  //使用Element loading-close 方法\n  loading.close();\n} // 请求拦截  设置统一header\n\n\naxios.interceptors.request.use(config => {\n  // 加载\n  startLoading();\n  if (localStorage.eleToken) config.headers.Authorization = localStorage.eleToken;\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // 响应拦截  401 token过期处理\n\naxios.interceptors.response.use(response => {\n  endLoading();\n  return response;\n}, error => {\n  // 错误提醒\n  endLoading();\n  Message.error(error.response.data);\n  const {\n    status\n  } = error.response;\n\n  if (status == 401) {\n    Message.error('token值无效，请重新登录'); // 清除token\n\n    localStorage.removeItem('eleToken'); // 页面跳转\n\n    router.push('/login');\n  }\n\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"names":["axios","Message","Loading","router","loading","startLoading","service","lock","text","background","endLoading","close","interceptors","request","use","config","localStorage","eleToken","headers","Authorization","error","Promise","reject","response","data","status","removeItem","push"],"sources":["D:/VUE学习/shop02/Capital-management-system-with-authority/前端/client/src/http.js"],"sourcesContent":["import axios from 'axios'\r\nimport { Message, Loading } from 'element-ui';\r\nimport router from './router'\r\n\r\nlet loading        //定义loading变量\r\n\r\nfunction startLoading() {    //使用Element loading-start 方法\r\n    loading = Loading.service({\r\n        lock: true,\r\n        text: '加载中...',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n}\r\nfunction endLoading() {    //使用Element loading-close 方法\r\n    loading.close()\r\n}\r\n\r\n// 请求拦截  设置统一header\r\naxios.interceptors.request.use(config => {\r\n    // 加载\r\n    startLoading()\r\n    if (localStorage.eleToken)\r\n        config.headers.Authorization = localStorage.eleToken\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n})\r\n\r\n// 响应拦截  401 token过期处理\r\naxios.interceptors.response.use(response => {\r\n    endLoading()\r\n    return response\r\n}, error => {\r\n    // 错误提醒\r\n    endLoading()\r\n    Message.error(error.response.data)\r\n\r\n    const { status } = error.response\r\n    if (status == 401) {\r\n        Message.error('token值无效，请重新登录')\r\n        // 清除token\r\n        localStorage.removeItem('eleToken')\r\n\r\n        // 页面跳转\r\n        router.push('/login')\r\n    }\r\n\r\n    return Promise.reject(error)\r\n})\r\n\r\nexport default axios"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAIC,OAAJ,C,CAAmB;;AAEnB,SAASC,YAAT,GAAwB;EAAK;EACzBD,OAAO,GAAGF,OAAO,CAACI,OAAR,CAAgB;IACtBC,IAAI,EAAE,IADgB;IAEtBC,IAAI,EAAE,QAFgB;IAGtBC,UAAU,EAAE;EAHU,CAAhB,CAAV;AAKH;;AACD,SAASC,UAAT,GAAsB;EAAK;EACvBN,OAAO,CAACO,KAAR;AACH,C,CAED;;;AACAX,KAAK,CAACY,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;EACrC;EACAV,YAAY;EACZ,IAAIW,YAAY,CAACC,QAAjB,EACIF,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+BH,YAAY,CAACC,QAA5C;EACJ,OAAOF,MAAP;AACH,CAND,EAMGK,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CARD,E,CAUA;;AACApB,KAAK,CAACY,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CAAgCS,QAAQ,IAAI;EACxCb,UAAU;EACV,OAAOa,QAAP;AACH,CAHD,EAGGH,KAAK,IAAI;EACR;EACAV,UAAU;EACVT,OAAO,CAACmB,KAAR,CAAcA,KAAK,CAACG,QAAN,CAAeC,IAA7B;EAEA,MAAM;IAAEC;EAAF,IAAaL,KAAK,CAACG,QAAzB;;EACA,IAAIE,MAAM,IAAI,GAAd,EAAmB;IACfxB,OAAO,CAACmB,KAAR,CAAc,gBAAd,EADe,CAEf;;IACAJ,YAAY,CAACU,UAAb,CAAwB,UAAxB,EAHe,CAKf;;IACAvB,MAAM,CAACwB,IAAP,CAAY,QAAZ;EACH;;EAED,OAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAnBD;AAqBA,eAAepB,KAAf"},"metadata":{},"sourceType":"module"}